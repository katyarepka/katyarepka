import RPi.GPIO as GPIO
import time
import math
import sys
import cv2

import mod7_func as linear_actuator
import step_func
import img_proc_func
GPIO.setmode(GPIO.BOARD)

##### GPIO setup for stepper
out1 = 13 
out2 = 11
out3 = 15
out4 = 12
GPIO.setup(out1,GPIO.OUT)
GPIO.setup(out2,GPIO.OUT)
GPIO.setup(out3,GPIO.OUT)
GPIO.setup(out4,GPIO.OUT)

#### GPIO for linear actuator 
in1 = 33
in2 = 35
en  = 37

#### Initializations
min_hsv = (110, 85, 0)     # Currently set to a wide range of purples
max_hsv = (160, 255, 255)
CAM_WIDTH = 640
CAM_HEIGHT = 480

marker_pos_ideal = CAM_WIDTH/2
pix_steps_ratio = 0.05           # Estimated proportional conversion from pixel distance between marker actual and desired position
move_amnt = 0

# Live camera feed init
feed = cv2.VideoCapture(0)
feed.set(cv2.CAP_PROP_FRAME_WIDTH, CAM_WIDTH)
feed.set(cv2.CAP_PROP_FRAME_HEIGHT, CAM_HEIGHT)

while True:
  img = feed.read()
  img = cv2.flip(img,-1) # May have to adjust the way I'm flipping this
  
  #find target center 
  center = img_proc_func.img_search(img, min_hsv, max_hsv, debug)
  if center:
    cX = center[0]
    e = marker_pos_ideal - cX     # If negative, Pi moves to the right from cam's pov; if positive, Pi moves to the left from cam's pov
    if e < 0.5:
      break
    move_amnt = pix_steps_ratio * e
    step_func.stepper_move(out1, out2, out3, out4, move_amnt, PAUSE)
    
  else:
    print('Tagret not found, moving over')
    step_func.stepper_move(out1, out2, out3, out4, 400, PAUSE)

linear_actuator.motor_init(in1, in2, en, 1000, 100)
linear_actuator.motor_direction(in1, in2, 1)
